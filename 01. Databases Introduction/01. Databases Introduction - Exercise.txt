01. Create Database

CREATE DATABASE [Minions]
---------------------------------------------------------

02. Create Tables

CREATE TABLE [Minions] (
[Id] INT PRIMARY KEY,
[Name] NVARCHAR (50) NOT NULL,
[Age] INT NOT NULL    
)

CREATE TABLE [Towns] (
[Id] INT PRIMARY KEY,
[Name] NVARCHAR (50) NOT NULL  
)
---------------------------------------------------------

03. Alter Minions Table

ALTER TABLE [Minions] 
ADD [TownId] INT FOREIGN KEY REFERENCES [Towns]([Id]) NOT NULL      - променяме таблицата Minions, като добавяме нова колона с Foreign Key, сочещ към Towns-Id
---------------------------------------------------------

04. Insert Records in Both Tables

INSERT INTO [Towns] ([Id], [Name])
VALUES 
(1, 'Sofia'),
(2, 'Plovdiv'),
(3, 'Varna')

ALTER TABLE [Minions]          - Променяме таблицата, колона Age - връщаме стойността да е NULL
ALTER COLUMN [Age] INT NULL

INSERT INTO [Minions] ([Id], [Name],[Age], [TownId])
VALUES 
(1, 'Kevin', 22, 1),
(2, 'Bob', 15, 3),
(3, 'Steward', NULL, 2)
---------------------------------------------------------

SELECT * FROM [Towns]
SELECT [Name], [Age] FROM [Minions]
---------------------------------------------------------

05. Truncate Table Minions

TRUNCATE TABLE [Minions]   - изтрива всички записи от таблицата (занулява я)
---------------------------------------------------------

06. Drop All Tables  - изтриване на всички таблици

DROP TABLE [Minions]
DROP TABLE [Towns]
---------------------------------------------------------

07. Create Table People

CREATE TABLE [People] (
[Id] INT PRIMARY KEY IDENTITY,
[Name] NVARCHAR (200) NOT NULL,
[Picture] VARBINARY (MAX), CHECK (DATALENGTH([Picture]) <=2000000),
[Height] DECIMAL (3,2),
[Weight] DECIMAL (5,2),
[Gender] CHAR (1) NOT NULL, CHECK ([Gender]='m'OR [Gender]='f'),
[Birhtdate] DATE NOT NULL,
[Biography] NVARCHAR (MAX)
)

INSERT INTO [People]([Name], [Height], [Weight], [Gender], [Birhtdate] )
VALUES
('Pesho', 1.77, 75.2, 'm', '1998-05-25'),
('Gosho', NULL, NULL, 'm', '1997-11-05'),
('Maria', 1.65, 42.2, 'f', '1998-06-27'),
('Viki', NULL, NULL, 'f', '1986-02-02'),
('Vancho', 1.69, 77.8, 'm', '1999-03-03')

---------------------------------------------------------

08. Create Table Users

CREATE TABLE [Users]
(
[Id] BIGINT PRIMARY KEY IDENTITY (1,1),
[Username] VARCHAR (30) UNIQUE NOT NULL,
[Password] VARCHAR (26) NOT NULL,
[ProfilePicture] VARBINARY (8000),
[LastLoginTime] TIME,
[IsDeleted] BIT
)

INSERT INTO [Users] ([Username], [Password],[LastLoginTime], [IsDeleted] )
VALUES
('Pesho', 'pass1234', '21:21:01', 'false' ),
('Gosho', 'pass12e2',  '20:21:01', 'true' ),
('Maria', 'passdasa', '21:03:01', 'true' ),
('Viki', 'passdwi8',  '12:21:01', 'false' ),
('Vancho', '2e32daa', '11:21:01', 'true' )

---------------------------------------------------------

09. Change Primary Key

ALTER TABLE [Users]                                - променяме структурата на таблицата
DROP CONSTRAINT PK__Users__3214EC071BD4AF3B        - изтриваме пъвичния ключ с това име

ALTER TABLE [Users]
ADD CONSTRAINT PK_Users_Complex
PRIMARY KEY ([Id], [Username])         -първичния ключ е комбинация от Id и Username

---------------------------------------------------------

10. Add Check Constraint

ALTER TABLE [Users]
ADD CONSTRAINT Check_Password_Length CHECK (DATALENGTH([Password]) >= 5);

---------------------------------------------------------

11. Set Default Value of a Field

ALTER TABLE [Users]
ADD CONSTRAINT Default_Current_Time DEFAULT GETDATE() FOR [LastLoginTime] 

---------------------------------------------------------

12. Set Unique Field

ALTER TABLE [Users]
DROP CONSTRAINT PK_Users_Complex
ALTER TABLE [Users]
ADD CONSTRAINT Pk_Id PRIMARY KEY ([Id])
ALTER TABLE [Users]
ADD CONSTRAINT Check_Username_Length CHECK (DATALENGTH(Username) >= 3)

---------------------------------------------------------

13. Movies Database

CREATE DATABASE [Movies]

CREATE TABLE [Directors] (
[Id] INT PRIMARY KEY IDENTITY NOT NULL,
[DirectorName] VARCHAR (255),
[Notes] VARCHAR (MAX)
);

INSERT INTO [Directors] ([DirectorName], [Notes])
VALUES
		('Guy Richie', 'Makes good movies'),
		('Woodie Alan', 'Makes bad movies'),
		('Pesho', NULL),
		('Gosho', NULL),
		('Ivana', 'Makes good movies')


CREATE TABLE [Genres] (
[Id] INT PRIMARY KEY IDENTITY NOT NULL,
[GenreName] VARCHAR (255),
[Notes] VARCHAR (MAX)
);

INSERT INTO [Genres] ([GenreName], [Notes])
VALUES
		('romantic', 'Loves'),
		('drama', 'bad movie'),
		('horror', 'really scarry'),
		('comedy', 'funny'),
		('criminal', 'interesting')

CREATE TABLE [Categories] (
[Id] INT PRIMARY KEY IDENTITY NOT NULL,
[CategoryName] VARCHAR (255),
[Notes] VARCHAR (MAX)
);

INSERT INTO [Categories] ([CategoryName], [Notes])
VALUES
		('Category 1', '1'),
		('Category 2', '2'),
		('Category 3', NULL),
		('Category 4', NULL),
		('Category 5', '5')


CREATE TABLE [Movies] (
[Id] INT IDENTITY NOT NULL,
[Title] VARCHAR (50),
[DirectorId] INT FOREIGN KEY REFERENCES [Directors]([Id]),
[CopyrightYear] SMALLINT,
[Length] FLOAT,
[GenreId] INT FOREIGN KEY REFERENCES [Genres]([Id]),
[CategoryId] INT FOREIGN KEY REFERENCES Categories([Id]),
[Rating] DECIMAL (3,1),
[Notes] VARCHAR (MAX)
);

INSERT INTO [Movies] ([Title], [DirectorId], [CopyrightYear], [Length], [GenreId], [CategoryId], [Rating], [Notes])
VALUES
		('Die hard', 2, NULL, 1.87, 1, 1, 5.4, '....'),
		('Rocky 2', 1, 1987, 1.6, 3, 3, 5.3, 'asakljk'),
		('Han Asparuh', 4, 1983, 2.67, 2, 2, 5.2, NULL),
		('Toplo', 3, 1976, 1.56, 5, 4, 5.5, 'ddde'),
		('Nai-dobriqt', 5, 1971, 1.47, 4, 5, 5, '...e.e.')

SELECT * FROM [Movies]

---------------------------------------------------------

14. Car Rental Database