01. Find Names of All Employees by First Name
 
-- method 1
SELECT
	  FirstName,
	  LastName
 FROM Employees
WHERE LEFT(FirstName, 2) = 'Sa';

 -- method 2
 SELECT
      FirstName,
      LastName
 FROM Employees
 WHERE	 FirstName LIKE 'Sa%';

-----------------------------------------------------------------------------------------

02. Find Names of All Employees by Last Name

 -- method 1
 SELECT
      FirstName,
      LastName
 FROM Employees
 WHERE LastName LIKE '%ei%';

  -- method 2
 SELECT
      FirstName,
      LastName
 FROM Employees
 WHERE CHARINDEX('ei', LastName) >0

--------------------------------------------------------------------------------------------

03. Find First Names of All Employees

SELECT
      FirstName
 FROM Employees
WHERE DepartmentID IN (3,10) AND YEAR (HireDate) BETWEEN 1995 AND 2005;

----------------------------------------------------------------------------------------------

04. Find All Employees Except Engineers

-- method 1
SELECT 
	 FirstName,  
	 LastName
FROM Employees
WHERE CHARINDEX ('engineer', JobTitle) =0;

--method 2
SELECT 
	 FirstName,  
	 LastName
FROM Employees
WHERE JobTitle NOT LIKE '%engineer%';

-------------------------------------------------------------------------------------------------

05. Find Towns with Name Length

   SELECT [Name]
     FROM Towns
    WHERE LEN(Name) IN (5,6)
 ORDER BY [Name]

----------------------------------------------------------------------------------------------

06. Find Towns Starting With

-- method 1
SELECT *
     FROM Towns
    WHERE LEFT([Name],1 ) IN ('M', 'K', 'B', 'E')
 ORDER BY [Name]

 -- method 2 - wildcards
SELECT *
     FROM Towns
    WHERE [Name] LIKE '[MKBE]%'
 ORDER BY [Name]
-------------------------------------------------------------------------------------------------

07. Find Towns Not Starting With

-- method 1
SELECT *
     FROM Towns
    WHERE LEFT([Name],1 ) NOT IN ('R', 'B', 'D')
 ORDER BY [Name]

 -- method 2 - wildcards
SELECT *
     FROM Towns
    WHERE [Name] NOT LIKE '[RBD]%'
 ORDER BY [Name]

-------------------------------------------------------------------------------------------------

08. Create View Employees Hired After 2000 Year

CREATE VIEW V_EmployeesHiredAfter2000 AS
SELECT FirstName, LastName
FROM Employees
WHERE YEAR(HireDate) >2000

SELECT * FROM  V_EmployeesHiredAfter2000

-------------------------------------------------------------------------------------------------

09. Length of Last Name

SELECT 
      FirstName,
      LastName
 FROM Employees
WHERE LEN(LastName) = 5;

--------------------------------------------------------------------------------------------------

10. Rank Employees by Salary

    SELECT EmployeeID,
		   FirstName,
		   LastName,
		   Salary,
		   DENSE_RANK () OVER (PARTITION BY Salary ORDER BY EmployeeID)
		   AS Rank
      FROM Employees
     WHERE Salary BETWEEN 10000 AND 50000
  ORDER BY Salary DESC

------------------------------------------------------------------------------------------------

11. Find All Employees With Rank 2

            SELECT *
	    FROM
			(SELECT EmployeeID,
				FirstName,
				LastName,
		                Salary,
				DENSE_RANK () OVER (PARTITION BY Salary ORDER BY EmployeeID)
				AS Rank
			   FROM Employees
			  WHERE Salary BETWEEN 10000 AND 50000 	     
		           ) AS RankingSubquery
	    WHERE Rank =2
	    ORDER bY Salary DESC

-------------------------------------------------------------------------------------------------

12. Countries Holding 'A' 3 or More Times

-- method 1 - wildcards
SELECT 
	 CountryName 
	 AS [Country Name],
	 IsoCode 
	 AS [ISO Code]
    FROM Countries
   WHERE LOWER( CountryName) LIKE '%a%a%a%' -- правим всички букви от името да са малки и търсим 3 пъти да има буква a
ORDER BY IsoCode

-- method 2 
SELECT 
	 CountryName 
	 AS [Country Name],
	 IsoCode 
         AS [ISO Code]
    FROM Countries
   WHERE LEN (CountryName) - LEN (REPLACE(LOWER(CountryName), 'a', '')) >=3
   -- От цялата дължина на думата премахваме дължината на думата след премахване на 'а', и ако е >=3, то е имало 3 броя буква 'а' в името
ORDER BY IsoCode

--------------------------------------------------------------------------------------------

13. Mix of Peak and River Names

SELECT 
	 p.[PeakName],
	 r.[RiverName],
	LOWER(CONCAT(SUBSTRING(p.PeakName, 1, LEN(p.PeakName )-1), r.RiverName )) -- Премахваме последната буква от името на върха и до него долепяме името на реката
	AS Mix
FROM Peaks
  AS p,
     Rivers
  AS r
  WHERE RIGHT(LOWER(p.PeakName),1) = LEFT(LOWER(r.RiverName),1)
  ORDER BY Mix
  
  SELECT COUNT (*) FROM Mountains --26  => връща колко редове има в таблицата
  SELECT COUNT (*) FROM 
-------------------------------------------------------------------------------------------------

14. Games From 2011 and 2012 Year

 SELECT TOP (50)
         [Name],        
		 FORMAT([Start], 'yyyy-MM-dd') AS [Start]
    FROM Games 
   WHERE YEAR([Start]) IN (2011, 2012)
ORDER BY [Start],
	     [Name];
-----------------------------------------------------------------------------------------------------

15. User Email Provider 

  SELECT [Username],
         SUBSTRING(Email, CHARINDEX('@', Email) +1, LEN(Email)-CHARINDEX('@', Email))
      AS [Email Provider]
    FROM Users
ORDER BY [Email Provider],
         [Username]
--------------------------------------------------------------------------------------------------------

16. Get Users with IP Address Like Pattern

SELECT 
		Username, 
		IpAddress 
		AS [IP Address]
FROM Users
WHERE [IpAddress] LIKE '___.1_%._%.___'
ORDER BY Username
-----------------------------------------------------------------------------------------------------

17. Show All Games with Duration and Part of the Day

SELECT 
	[Name] 
	AS Game,
		CASE 
			WHEN DATEPART(HOUR, [Start]) >=0 AND DATEPART(HOUR,[Start]) < 12 THEN 'Morning'
			WHEN DATEPART(HOUR, [Start]) >=12 AND DATEPART(HOUR,[Start]) < 18 THEN 'Afternoon'
			ELSE 'Evening'
		END
	AS [Part of the Day],
	        CASE
			WHEN Duration <=3 THEN 'Extra Short'
			WHEN Duration >3 AND Duration <=6 THEN 'Short'
			WHEN Duration >6  THEN 'Long'
			ELSE 'Extra Long'
		END
	AS Duration
FROM Games
ORDER BY [Name],	
		Duration,
		[Part of the Day]

-------------------------------------------------------------------------------------------------

18. Orders Table

       USE Orders
       GO  

         SELECT
		ProductName,
		OrderDate,
		DATEADD(DAY ,3, OrderDate)
		AS [Pay Due],
		DATEADD (MONTH, 1, OrderDate)
		AS [Deliver Due]
         FROM
               Orders

-------------------------------------------------------------------------------------------------

19. People Table

USE Demo
GO

CREATE TABLE People2 (
ID INT IDENTITY,
[Name] VARCHAR (50) NOT NULL,
Birthdate DATETIME2 NOT NULL
)

INSERT INTO People2 
VALUES 
('Victor', '2000-12-07'),
('Steven', '1992-09-10'),
('Stephen', '1910-09-19'),
('John' , '2010-01-06')

SELECT
		[Name],
		DATEDIFF(YEAR, Birthdate, GETDATE())
		AS [Age in Years],
		DATEDIFF(MONTH, Birthdate, GETDATE())
		AS [Age in Months],
		DATEDIFF(DAY, Birthdate, GETDATE())
		AS [Age in Days],
		DATEDIFF(MINUTE, Birthdate, GETDATE())
		AS [Age in Minutes]
FROM People2