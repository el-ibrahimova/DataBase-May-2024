01. Database Design

CREATE DATABASE Boardgames
GO

USE Boardgames
GO

CREATE TABLE Categories(
Id	INT IDENTITY PRIMARY KEY,
[Name]	VARCHAR (50) NOT NULL
)

CREATE TABLE Addresses(
Id	INT IDENTITY PRIMARY KEY,
StreetName NVARCHAR(100) NOT NULL,
StreetNumber INT NOT NULL,
Town VARCHAR(30) NOT NULL,
Country VARCHAR(50) NOT NULL,
ZIP INT NOT NULL
)

CREATE TABLE Publishers(
Id	INT IDENTITY PRIMARY KEY,
[Name] VARCHAR(30) UNIQUE NOT NULL,
AddressId INT FOREIGN KEY REFERENCES Addresses(Id) NOT NULL,
Website NVARCHAR(40),
Phone NVARCHAR(20)
)

CREATE TABLE PlayersRanges(
Id INT IDENTITY PRIMARY KEY,
PlayersMin INT NOT NULL,
PlayersMax INT NOT NULL
)

CREATE TABLE Boardgames(
Id INT IDENTITY PRIMARY KEY,
[Name] NVARCHAR(30) NOT NULL,
YearPublished INT NOT NULL,
Rating DECIMAL(4,2) NOT NULL,
CategoryId INT FOREIGN KEY REFERENCES Categories(Id) NOT NULL,
PublisherId INT FOREIGN KEY REFERENCES Publishers(Id) NOT NULL,
PlayersRangeId INT FOREIGN KEY REFERENCES PlayersRanges(Id) NOT NULL
)

CREATE TABLE Creators(
Id INT IDENTITY PRIMARY KEY,
FirstName NVARCHAR(30) NOT NULL,
LastName NVARCHAR(30) NOT NULL,
Email NVARCHAR(30) NOT NULL
)

CREATE TABLE CreatorsBoardgames(
CreatorId INT FOREIGN KEY REFERENCES Creators(Id) NOT NULL,
BoardgameId INT FOREIGN KEY REFERENCES Boardgames(Id) NOT NULL,
CONSTRAINT PK_CreatorsBoardgames PRIMARY KEY (CreatorId,BoardgameId )
)
--------------------------------------------------------------------------------------------------

02. Insert

INSERT INTO Boardgames ([Name], YearPublished, Rating, CategoryId, PublisherId, PlayersRangeId)
VALUES
('Deep Blue',			2019,	5.67,	1,	15,	7),
('Paris',   			2016,	9.78,	7,	1,	5),
('Catan: Starfarers',	2021,	9.87,	7,	13,	6),
('Bleeding Kansas', 	2020,	3.25,	3,	7,	4),
('One Small Step',  	2019,	5.75,	5,	9,	2);

INSERT INTO Publishers([Name],	AddressId,	Website,	Phone)
VALUES
('Agman Games',	    5,	'www.agmangames.com',	 '+16546135542'),
('Amethyst Games',	7,	'www.amethystgames.com', '+15558889992'),
('BattleBooks', 	13,	'www.battlebooks.com',	 '+12345678907');
-------------------------------------------------------------------------------------------------

03. Update

UPDATE PlayersRanges
SET PlayersMax +=1
WHERE PlayersMin=2 AND PlayersMax =2;

UPDATE Boardgames
SET [Name] = [Name]+'V2'
WHERE YearPublished >=2020
-------------------------------------------------------------------------------------------------

04. Delete

DELETE 
FROM CreatorsBoardgames
WHERE BoardgameId IN (1,6,16,21,31,36,47);

DELETE
FROM Boardgames
WHERE PublisherId IN (1,6);

DELETE
FROM Publishers
WHERE AddressId =5;

DELETE 
FROM Addresses
WHERE Town LIKE 'L%';
----------------------------------------------------------------------------------------------

05. Boardgames by Year of Publication
  SELECT  
	     [Name],
      	 Rating
    FROM Boardgames
ORDER BY YearPublished,
		 [Name] DESC;
-----------------------------------------------------------------------------------------------

06. Boardgames by Category
  SELECT 
		 b.Id, 
		 b.[Name],
		 b.YearPublished,
		 c.[Name]
    FROM Boardgames AS b
    JOIN Categories AS c ON b.CategoryId = c.Id
   WHERE c.[Name] IN ('Strategy Games', 'Wargames')
ORDER BY b.YearPublished DESC;
-------------------------------------------------------------------------------------------------

07. Creators without Boardgames
   SELECT 
	  c.Id,
	  CONCAT(c.FirstName, ' ', c.LastName) AS CreatorName,
	  c.Email
     FROM Creators AS c
LEFT JOIN CreatorsBoardgames AS cb ON c.Id = cb.CreatorId 
LEFT JOIN Boardgames AS b ON cb.BoardgameId = b.Id
    WHERE b.Id IS NULL
 ORDER BY c.FirstName
-----------------------------------------------------------------------------------------------

08. First 5 Boardgames

  SELECT 
	 TOP 5
	 b.[Name],
	 b.Rating,
 	 c.[Name]
    FROM Boardgames AS b
    JOIN PlayersRanges AS p ON b.PlayersRangeId = p.Id
    JOIN Categories AS c ON b.CategoryId = c.Id
   WHERE (b.Rating>7 AND b.[Name] LIKE '%a%')
      OR (b.Rating >7.5 AND p.PlayersMin>=2 AND p.PlayersMax<=5)
ORDER BY b.[Name],
         b.Rating DESC
-------------------------------------------------------------------------------------------------

09. Creators with Emails


WITH GamesRankedByCreator AS
(
   SELECT 
          CONCAT(c.FirstName, ' ', c.LastName)AS FullName,
          c.Email,
          b.Rating, 
          RANK() OVER (PARTITION BY c.Email ORDER BY b.Rating DESC) AS GameRank
     FROM Creators AS c
     JOIN CreatorsBoardgames AS cb ON c.Id = cb.CreatorId
     JOIN Boardgames AS b ON cb.BoardgameId = b.Id
     WHERE c.Email LIKE '%.com' 
)

  SELECT 
         FullName, 
         Email,
         Rating
    FROM GamesRankedByCreator
   WHERE GameRank = 1
ORDER BY FullName
--------------------------------------------------------------------------------------------

10. Creators by Rating

  SELECT 
	 c.LastName,
	 CEILING(AVG(b.Rating)) AS AverageRating,
	 p.[Name] as PunlisherName
    FROM Creators AS c
    JOIN CreatorsBoardgames AS cb ON c.Id = cb.CreatorId
    JOIN Boardgames AS b ON cb.BoardgameId = b.Id 
    JOIN Publishers AS p ON b.PublisherId = p.Id
   WHERE p.[Name] = 'Stonemaier Games'
GROUP BY c.LastName, p.[Name] 
ORDER BY AVG(b.Rating) DESC
-------------------------------------------------------------------------------------------------

11. Creator with Boardgames

CREATE FUNCTION udf_CreatorWithBoardgames(@name NVARCHAR(30))
RETURNS INT
	AS
	  BEGIN
		DECLARE @result INT

		SELECT @result = COUNT(cb.BoardgameId)
		FROM Creators AS c
		JOIN CreatorsBoardgames AS cb ON c.Id = cb.CreatorId
		WHERE c.FirstName = @name

		RETURN @result
	  END
------------------------------------------------------------------------------------------------

12. Search for Boardgame Specific Category

CREATE PROCEDURE usp_SearchByCategory(@category VARCHAR(50))
AS
BEGIN
	SELECT 
	         b.[Name],
	         b.YearPublished,
	         b.Rating,
	         c.[Name] AS CategoryName,
	         p.[Name] AS PublisherName, 
                 CONCAT(pr.PlayersMin, ' people') AS MinPlayers,
	         CONCAT(pr.PlayersMax, ' people') AS MaxPlayers
	    FROM Categories AS c
	    JOIN Boardgames AS B ON c.Id = b.CategoryId
	    JOIN Publishers AS p ON p.Id = b.PublisherId
	    JOIN PlayersRanges AS pr ON b.PlayersRangeId = pr.Id
	   WHERE c.[Name] = @category
	ORDER BY p.[Name],
			 b.YearPublished DESC
END